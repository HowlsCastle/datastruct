spring:
  profiles:
    active: dev
  application:
    name: datastruct
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    hikari:
      # 连接池中连接的最长寿命（单位为毫秒）。
      max-lifetime: 1765000
      # 连接池能达到的最大规模，包含空闲连接的数量和使用中的连接数量。
      maximum-pool-size: 10
      # 连接超时（单位毫秒）
      connection-timeout: 300000
      # HikariCP试图在连接池里维持的最小空闲连接数。
      minimum-idle: 2
      # 更新操作是否自动提交
      auto-commit: false
      # 连接池中的连接能保持闲置状态的最长时间，单位为毫秒。（默认值： 10 。）
      idle-timeout: 10
      # 是否要隔离内部请求。（默认值： false 。）
      isolate-internal-queries: false
      # 用来检测Hikari连接池连接泄露的阈值，单位为毫秒。
      #leak-detection-threshold:
      # 数据源的JNDI位置。设置了该属性则忽略类、URL、用户名和密码属性。
      #data-source-j-n-d-i:
      # 设置要纳入健康检查的属性。（用于Hikari连接池。）
      #health-check-properties:
      # 设置创建数据源时使用的属性。（用于Hikari连接池。）
      #data-source-properties:
      # 在所有新连接创建时都会执行的SQL语句，该语句会在连接加入连接池前执行。
      #connection-init-sql:
      # 默认的Catalog名称
      #catalog:
  cloud:
    config:
# application name
      name: ${spring.application.name}
# profile name${config.profile:dev}
      profile: ${spring.profiles.active:test}
  mvc:
    throw-exception-if-no-handler-found: true
  resources:
    add-mappings: true

server:
  tomcat:
    uri-encoding: utf-8
  port: 8030

logging:
  config:
    classpath: logback-spring.xml
#关闭健康检查的验证
management:
  security:
    enabled: false

